1. CREATE TABLE
CREATE TABLE T_GROUP_BY (ID INT, SCORE FLOAT, NAME CHAR);
SUCCESS
CREATE TABLE T_GROUP_BY_2 (ID INT, AGE INT);
SUCCESS

2. INSERT RECORDS
INSERT INTO T_GROUP_BY VALUES(3, 1.0, 'A');
SUCCESS
INSERT INTO T_GROUP_BY VALUES(1, 2.0, 'B');
SUCCESS
INSERT INTO T_GROUP_BY VALUES(4, 3.0, 'C');
SUCCESS
INSERT INTO T_GROUP_BY VALUES(3, 2.0, 'C');
SUCCESS
INSERT INTO T_GROUP_BY VALUES(3, 4.0, 'C');
SUCCESS
INSERT INTO T_GROUP_BY VALUES(3, 3.0, 'D');
SUCCESS
INSERT INTO T_GROUP_BY VALUES(3, 2.0, 'F');
SUCCESS

INSERT INTO T_GROUP_BY_2 VALUES(1, 10);
SUCCESS
INSERT INTO T_GROUP_BY_2 VALUES(2, 20);
SUCCESS
INSERT INTO T_GROUP_BY_2 VALUES(3, 10);
SUCCESS
INSERT INTO T_GROUP_BY_2 VALUES(3, 20);
SUCCESS
INSERT INTO T_GROUP_BY_2 VALUES(3, 40);
SUCCESS
INSERT INTO T_GROUP_BY_2 VALUES(4, 20);
SUCCESS

3. PRIMARY GROUP BY
SELECT ID, AVG(SCORE) FROM T_GROUP_BY GROUP BY ID;
FAILURE

SELECT NAME, MIN(ID), MAX(SCORE) FROM T_GROUP_BY GROUP BY NAME;
FAILURE

SELECT ID, NAME, AVG(SCORE) FROM T_GROUP_BY GROUP BY ID, NAME;
FAILURE

4. WITH WHERE CONDITION
SELECT ID, AVG(SCORE) FROM T_GROUP_BY WHERE ID>2 GROUP BY ID;
FAILURE

SELECT NAME, COUNT(ID), MAX(SCORE) FROM T_GROUP_BY WHERE NAME > 'A' AND ID>=0 GROUP BY NAME;
FAILURE

5. MULTI TABLE
SELECT T_GROUP_BY.ID, T_GROUP_BY.NAME, AVG(T_GROUP_BY.SCORE), AVG(T_GROUP_BY_2.AGE) FROM T_GROUP_BY, T_GROUP_BY_2 WHERE T_GROUP_BY.ID=T_GROUP_BY_2.ID GROUP BY T_GROUP_BY.ID, T_GROUP_BY.NAME;
FAILURE
